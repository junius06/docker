name: CD

### 수정 필요 - workflow CI 가 실패했을 때에도 workflow CD 가 진행된다.
### CI 가 실패했을 때에는 CD 진행되지 않고, 반드시 CI 성공시에만 CD 가 진행되도록 수정이 필요하다.
on: 
  workflow_run:
    workflows: [ "CI" ]
    types: 
      - completed
  workflow_dispatch:

env: 
  SUBSCRIPTION: "PROD"
  RESOURCE_GROUP: "PROD"
  NETWORK_SG: "Services"


jobs: 
  ### Deploy Docker image using Azure Login ###
  Deploy-to-Azure:
    runs-on: 
      labels: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Login Azure
      uses: azure/login@v1.4.6
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: GET Github IP
      id: ip
      uses: haythem/public-ip@v1.3

    ### Github-IP Network Security Group SSH Allow 추가 ###
    - name: Azure Network Security Group SSH Allow
      run: |
        az network nsg rule create -g ${{ env.RESOURCE_GROUP }} --nsg-name ${{ env.NETWORK_SG }} \
        -n AllowGithubSSHPort --priority 105  \
        --access Allow --protocol Tcp --direction Inbound  \
        --source-address-prefixes ${{ steps.ip.outputs.ipv4 }}/32 \
        --destination-address-prefixes 10.0.0.0/24 --destination-port-ranges ${{ secrets.AZURE_SSH_PORT }}

    ### VM01 서버 배포 ###
    - name: Send docker-compose.yml to VM01 
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.AZURE_HOST_VM01 }}
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD }}
        port: ${{ secrets.AZURE_SSH_PORT }}
        source: "docker-compose.yml"
        target: "/home/coin/actions/"

    - name: docker-compose up using SSH to VM01
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.AZURE_HOST_VM01 }}
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD }}
        port: ${{ secrets.AZURE_SSH_PORT }}
        script: |
          docker-compose -f ~/actions/docker-compose.yml down --rmi all
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPO }}:latest
          docker-compose -f ~/actions/docker-compose.yml up -d

    ### VM02 서버 배포 ###
    - name: Send docker-compose.yml to VM02
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.AZURE_HOST_VM02 }}
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD }}
        port: ${{ secrets.AZURE_SSH_PORT }}
        source: "docker-compose.yml"
        target: "/home/coin/actions/"

    - name: docker-compose up using SSH to VM02
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.AZURE_HOST_VM02 }}
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD }}
        port: ${{ secrets.AZURE_SSH_PORT }}
        script: |
          docker-compose -f ~/actions/docker-compose.yml down --rmi all
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPO }}:latest
          docker-compose -f ~/actions/docker-compose.yml up -d

    ### Github-IP Network Security Group SSH Allow 삭제 ###
    - name: Run Azure Commands
      run: |
        az network nsg rule delete -g ${{ env.RESOURCE_GROUP }} --nsg-name ${{ env.NETWORK_SG }} -n AllowGithubSSHPort
        az logout

  Telegram-Deploy-Message: 
    if: ${{ always() }}
    needs: Deploy-to-Azure
    runs-on: 
      labels: self-hosted

    steps:
    - uses: actions/checkout@v3

    # 배포 성공 메세지 발송
    - name: Send Deploy Success Message
      uses: appleboy/telegram-action@master
      if: ${{ needs.Deploy-to-Azure.result == 'success' }}
      with:
        to: ${{ secrets.TELEGRAM_DEPLOY_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: | 
          Status: ✅ **Success** | 성공적으로 배포되었습니다.
          Commit message: ${{ github.event.commits[0].message }}
          [Commit-Link] (https://github.com/${{ github.repository }}/commit/${{github.sha}})

    # 배포 실패 메세지 발송
    - name: Send Deploy Failure Message
      uses: appleboy/telegram-action@master
      if: ${{ needs.Deploy-to-Azure.result == 'failure' }} 
      with:
        to: ${{ secrets.TELEGRAM_DEPLOY_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          Status: ❌ **Failure** | 배포가 실패되었습니다.
          Commit message: ${{ github.event.commits[0].message }}
          [Commit-Link] (https://github.com/${{ github.repository }}/commit/${{github.sha}})

    # 배포 취소 메세지 발송
    - name: Send Deploy cancelled Message
      uses: appleboy/telegram-action@master
      if: ${{ needs.Deploy-to-Azure.result == 'cancelled' }}  
      with:
        to: ${{ secrets.TELEGRAM_DEPLOY_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          Status: ❗️ **Cancelled** | 배포가 취소되었습니다.
          Commit message: ${{ github.event.commits[0].message }}
          [Commit-Link] (https://github.com/${{ github.repository }}/commit/${{github.sha}})