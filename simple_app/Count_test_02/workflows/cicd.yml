name: CICD

# 워크플로우 sonarqube.yml 에서 코드 스멜 등 문제가 없을 경우,
# 코드가 정상일 경우 아래 워크플로우가 실행되도록 변경할 예정이다.
# 위 방향성이 잘못된거라면???? 그러면 빌드 끝나고 sonarqube를 돌려야 하는 것일까??

on:
  #workflow_dispatch:
  push:
  #  branches: [ "dev" ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS configure
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        #run: |
        #  aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Image build & push on ECR
        id: build-image
        env: 
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Image digest check
        run: echo ${{ steps.image_push.outputs.digest }}

  # 최대한 보안그룹은 건드리지 않을 수 있도록 진행을 해보자. 왜냐하면 깃허브는 아이피가 계속 바뀌기 때문에.
  # EC2에 접근하는 방법을 생각해보자. (파일전송(scp), 서버에서 명령어 실행(ssh))
  Deploy:
    runs-on: ubuntu-latest
    needs: ECR
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Send file to instance
        run: |
          echo "send src_directory. destination ~/app"

      - name: AWS SSM
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          instance-ids: ${{ secrets.INSTANCE_TEST }}

          working-directory: ~/app/src
          command: |
            echo $(date) >> logs.txt
            deploy.sh
          comment: Executed by Github Actions

      - name: Get the outputs
        run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"
